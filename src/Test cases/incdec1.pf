program incdec1;		{ Version 1.5 of 1/15/82 }
const minint = -32768;
      maxint = +32767;
{
	inc -- increment
}
procedure inc(var n: integer);
entry n >= minint;
      n <= maxint - 1;
      defined(n);
exit  n >= minint + 1;
      n <= maxint;
      n = n.old + 1;
      defined(n);
begin
    n := n + 1;
end {inc};
{
	dec -- decrement
}
procedure dec(var n: integer);
entry n >= minint + 1;
      n <= maxint;
      defined(n);
exit  n >= minint;
      n <= maxint - 1;
      n = n.old - 1;
      defined(n);
begin
    n := n - 1;
end {dec};
{
	test  --  test inc and dec
}
procedure test(x: integer);
var hold: extra integer;
entry x < maxint; x >= minint;
begin
    proof hold := x;				{ save original value of x }
    inc(x);
    dec(x);
    assert(x = hold);				{ inc then dec = no chng }
end {test};
begin
end.
