{	printvars  --  print variable item file produced by		       Verifier pass 1.}program printvars(output);const#include "P1X-VER00.h"type#include "P1X-VER01.h"var    f: file of varitem;				{ input file }    vitem: varitem;				{ working item }begin    reset(f,'pasf-vars');			{ get file }    while not eof(f) do begin			{ until eof }        read(f,vitem);				{ read one item }						{ ***DEBUG VERSION*** }          write(	' ':vitem.itemdepth,' ':vitem.itemdepth,	{ indentation }  	vitem.itemdepth:2, ' ',vitem.itemname,	' {',	vitem.vrsource.filenumber:1, ':', vitem.vrsource.linenumber:1,	'}',					{ line number }	' (',vitem.loc.relocation:1);	if vitem.loc.relocation in [stackaddr, paramaddr, routineaddr] then	    write('[',vitem.loc.blockn:1,']');	write(',',vitem.loc.address:1,': ',vitem.size:1,' bits) ');	if vitem.form in [numericdata, arraydata, setdata] then begin	    write(vitem.minvalue:1,'..',vitem.maxvalue:1);	    if vitem.scale <> 0 then write('/',vitem.scale:1); 	    write(' ');	end;	    if vitem.recordname[1] <> ' ' then write(vitem.recordname,' ');	    if vitem.recordnum <> 0 then write('(#',vitem.recordnum:1,') ');	    if vitem.form <> numericdata then write(vitem.form,' ');	    if vitem.by <> bynothing then write(vitem.by);	writeln;    end;end.